plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20-RC'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'daylightnebula'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    // kotlin stuff
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // mc stuff
    implementation "net.axay:kspigot:1.19.1"
    compileOnly 'io.papermc.paper:paper-api:1.19.3-R0.1-SNAPSHOT'

    // json stuff
    implementation "org.json:json:20230227"

    // ktor
    implementation "io.ktor:ktor-server-core:2.2.3"
    implementation "io.ktor:ktor-server-netty:2.2.3"
    implementation "io.ktor:ktor-network-tls-certificates:2.2.3"
}

def targetJavaVersion = 19
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 19 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    destinationDirectory = file("/testserver/plugins")
}

shadowJar {
    destinationDirectory = file("/testserver/plugins")
}